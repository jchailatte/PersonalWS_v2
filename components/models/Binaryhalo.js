/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useFrame } from 'react-three-fiber'
import { useGLTF } from '@react-three/drei/useGLTF'

import { useAnimations } from '@react-three/drei/useAnimations'

function BinaryHalo(props) {
    const group = useRef()
    const group2 = useRef()
    const { nodes, materials, animations } = useGLTF('/models/binaryhalo.glb')

    useFrame((state) => {
        group.current.rotation.z = group.current.rotation.z - 0.001;
        group2.current.rotation.z = group2.current.rotation.z + 0.002;
    })

    return (
        <group 
            ref={group} 
            {...props} 
            dispose={null} 
            rotation={[-Math.PI / 2, 0, 0]}
            scale={[50, 50, 50]}
        >
            <mesh geometry={nodes.nimbus002_0.geometry}
                layers={1}
            >
                <meshStandardMaterial {...materials.Crown} color='blue' emissive="blue"/>
            </mesh>
            <group ref={group2} name="nimbus001">
                <mesh 
                    geometry={nodes.nimbus001_0.geometry} 
                    layers={1}
                >
                    <meshStandardMaterial {...materials.Crown} color='red'/>
                </mesh>
                <mesh 
                    material={materials.Crown} 
                    geometry={nodes.nimbus003_0.geometry} 
                    layers={1}
                />
            </group>
        </group>
    )
}

useGLTF.preload('/models/binaryhalo.glb')


export default BinaryHalo;