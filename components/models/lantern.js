/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Bansheeva (https://sketchfab.com/Bansheeva)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lanterns-lowpoly-models-homework-11-e7d36f6ce9824228b787204591f6f356
title: Lanterns lowpoly models homework 11
*/

import React, { useRef, Fragment } from 'react';
import PropTypes from 'prop-types';
import { useFrame } from '@react-three/fiber';
import { useGLTF, Octahedron } from '@react-three/drei';

const Lantern = props => {
    const group = useRef();
    const { nodes, materials } = useGLTF('/models/lantern.glb');

    useFrame(state => {
        const time = state.clock.getElapsedTime();
        group.current.rotation.y = group.current.rotation.y + 0.01 * props.rotation;
        group.current.position.y =
            group.current.position.y + Math.sin(time + props.yOffset * 60) / 30;
    });

    return (
        <group
            dispose={null}
            position={[props.x, props.y, props.z]}
            ref={group}
        >
            <Fragment>
                <pointLight
                    color="white"
                    distance={90}
                    intensity={1}
                    layers={1}
                />
                <Octahedron
                    layers={1}
                    position={[0, 0.5, 0]}
                    scale={[0.5, 1, 0.5]}
                >
                    <meshLambertMaterial
                        attach="material"
                        color="white"
                        emissive="white"
                    />
                </Octahedron>
                <mesh
                    geometry={nodes.JapaneseLantern_paper_0.geometry}
                    layers={1}
                    position={[0, 0.66, 0]}
                >
                    <meshStandardMaterial
                        {...materials.paper}
                        color={props.color}
                        emissive={props.color}
                        opacity={0.3}
                        transparent={true}
                    />
                </mesh>
                <mesh
                    geometry={nodes.JapaneseLantern_goldenrope_0.geometry}
                    material={materials.goldenrope}
                    position={[0, 1.35, 0]}
                />
                <mesh
                    geometry={nodes.JapaneseLantern_redrope_0.geometry}
                    layers={1}
                    material={materials.redrope}
                    position={[0, 1.28, 0]}
                />
                <mesh
                    geometry={nodes.JapaneseLantern_lambert1_0.geometry}
                    material={materials.lambert1}
                    position={[0, 1.49, 0]}
                />
                <mesh
                    geometry={nodes.JapaneseLantern_wood_0.geometry}
                    material={materials.wood}
                    position={[0, 0.84, 0]}
                />
            </Fragment>
        </group>
    );
};

useGLTF.preload('/models/lantern.glb');

Lantern.propTypes = {
    x: PropTypes.number.isRequired,
    y: PropTypes.number.isRequired,
    z: PropTypes.number.isRequired,
    rotation: PropTypes.number,
    yOffset: PropTypes.number,
    color: PropTypes.string
};

Lantern.defaultProps = {
    color: 'teal'
};

export default Lantern;
